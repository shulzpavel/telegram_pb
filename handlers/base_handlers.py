"""
Base handlers for common functionality
"""
import logging
from aiogram import types, Router
from aiogram.filters import Command

from core.bootstrap import bootstrap
from core.error_handler import safe_send_message, safe_handler
from services.group_config_service import GroupConfigService
from services.role_service import RoleService

logger = logging.getLogger(__name__)

router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
group_config_service = bootstrap.get_group_config_service()
role_service = bootstrap.get_role_service()


def is_allowed_chat(chat_id: int, topic_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —Ä–∞–∑—Ä–µ—à–µ–Ω –ª–∏ —á–∞—Ç"""
    logger.info(f"IS_ALLOWED_CHAT: Checking chat_id={chat_id}, topic_id={topic_id}")
    
    try:
        group_config = group_config_service.get_group_config(chat_id, topic_id)
        if group_config and group_config.is_active:
            logger.info(f"IS_ALLOWED_CHAT: Match found for {chat_id}_{topic_id}")
            return True
        else:
            logger.warning(f"IS_ALLOWED_CHAT: No active config found for {chat_id}_{topic_id}")
            return False
    except Exception as e:
        logger.error(f"IS_ALLOWED_CHAT: Error checking config: {e}")
        return False


def is_admin(user: types.User, chat_id: int, topic_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º"""
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —Ä–æ–ª–µ–π
    if role_service.can_manage_session(user):
        return True
    
    # Fallback –Ω–∞ —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    return group_config_service.is_admin(chat_id, topic_id, user)


@router.message(Command("start", "help"))
@safe_handler
async def help_command(msg: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    if not is_allowed_chat(msg.chat.id, msg.message_thread_id or 0):
        return
    
    text = (
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á Planning Poker.\n\n"
        "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ `/join + —Ç–æ–∫–µ–Ω` - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏\n"
        "‚Ä¢ `/menu` - –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ `/start` - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é\n\n"
        "üéØ –§—É–Ω–∫—Ü–∏–∏:\n"
        "‚Ä¢ üÜï –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á\n"
        "‚Ä¢ üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –ø–æ –∑–∞–¥–∞—á–∞–º\n"
        "‚Ä¢ üìà –ü–æ–¥—Å—á–µ—Ç Story Points\n"
        "‚Ä¢ üìã –û—Ç—á–µ—Ç—ã –ø–æ —Å–µ—Å—Å–∏—è–º\n"
        "‚Ä¢ üìä –ò—Ç–æ–≥–∏ –¥–Ω—è\n\n"
    )
    
    await safe_send_message(msg.answer, text, parse_mode="Markdown")
