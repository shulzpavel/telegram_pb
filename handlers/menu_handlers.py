"""
Menu handlers
"""
import logging
from aiogram import types, Router, F
from aiogram.types import CallbackQuery

from core.bootstrap import bootstrap
from .base_handlers import is_allowed_chat, is_admin
from utils import (
    safe_send_message, safe_answer_callback, get_main_menu, get_settings_menu,
    get_scale_menu, get_timeout_menu, get_stats_menu, get_help_menu,
    format_participants_list, generate_summary_report
)

logger = logging.getLogger(__name__)

router = Router()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
session_service = bootstrap.get_session_service()
group_config_service = bootstrap.get_group_config_service()


@router.callback_query(F.data == "menu:back")
async def handle_back(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥'"""
    try:
        if not callback.from_user or not callback.message:
            return
        
        chat_id = callback.message.chat.id
        topic_id = callback.message.message_thread_id or 0
        
        if not is_allowed_chat(chat_id, topic_id):
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        user_is_admin = is_admin(callback.from_user, chat_id, topic_id)
        keyboard = get_main_menu(is_admin=user_is_admin)
        
        await safe_send_message(
            callback.message.edit_text,
            "üéØ **–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é**\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"Error in back handler: {e}")
        await safe_answer_callback(callback, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –º–µ–Ω—é", show_alert=True)


@router.callback_query(F.data == "menu:new_task")
async def handle_new_task(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏"""
    try:
        if not callback.from_user or not callback.message:
            return
        
        chat_id = callback.message.chat.id
        topic_id = callback.message.message_thread_id or 0
        
        if not is_allowed_chat(chat_id, topic_id):
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if not is_admin(callback.from_user, chat_id, topic_id):
            await safe_answer_callback(callback, "‚ùå –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–¥–∞—á–∏", show_alert=True)
            return
        
        await safe_send_message(
            callback.message.edit_text,
            "üìù **–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á**\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "‚Ä¢ –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é\n"
            "‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ñ–æ—Ä–º\n"
            "‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã\n\n"
            "–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ Excel —Ñ–∞–π–ª (.xlsx) —Å –∑–∞–¥–∞—á–∞–º–∏.",
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"Error in new task handler: {e}")
        await safe_answer_callback(callback, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–¥–∞—á–∏", show_alert=True)


@router.callback_query(F.data == "menu:summary")
async def handle_summary(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∏—Ç–æ–≥–æ–≤ –¥–Ω—è"""
    try:
        if not callback.from_user or not callback.message:
            return
        
        chat_id = callback.message.chat.id
        topic_id = callback.message.message_thread_id or 0
        
        if not is_allowed_chat(chat_id, topic_id):
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é
        session = session_service.get_session(chat_id, topic_id)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = generate_summary_report(session, is_daily=True)
        
        await safe_send_message(
            callback.message.edit_text,
            f"üìä **–ò—Ç–æ–≥–∏ –¥–Ω—è**\n\n{report}",
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"Error in summary handler: {e}")
        await safe_answer_callback(callback, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Ç–æ–≥–æ–≤", show_alert=True)


@router.callback_query(F.data == "menu:show_participants")
async def handle_show_participants(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    try:
        if not callback.from_user or not callback.message:
            return
        
        chat_id = callback.message.chat.id
        topic_id = callback.message.message_thread_id or 0
        
        if not is_allowed_chat(chat_id, topic_id):
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é
        session = session_service.get_session(chat_id, topic_id)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        participants_text = format_participants_list(session)
        
        await safe_send_message(
            callback.message.edit_text,
            f"üë• **–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Å–µ—Å—Å–∏–∏**\n\n{participants_text}",
            parse_mode="Markdown"
        )
        
    except Exception as e:
        logger.error(f"Error in show participants handler: {e}")
        await safe_answer_callback(callback, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", show_alert=True)


@router.callback_query(F.data == "menu:leave")
async def handle_leave(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–µ—Å—Å–∏–∏"""
    try:
        if not callback.from_user or not callback.message:
            return
        
        chat_id = callback.message.chat.id
        topic_id = callback.message.message_thread_id or 0
        
        if not is_allowed_chat(chat_id, topic_id):
            return
        
        # –£–¥–∞–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞
        participant = session_service.remove_participant(chat_id, topic_id, callback.from_user.id)
        
        if participant:
            await safe_answer_callback(callback, f"‚úÖ –í—ã –ø–æ–∫–∏–Ω—É–ª–∏ —Å–µ—Å—Å–∏—é, {participant.full_name.value}!")
        else:
            await safe_answer_callback(callback, "‚ùå –í—ã –Ω–µ –±—ã–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–µ—Å—Å–∏–∏", show_alert=True)
        
    except Exception as e:
        logger.error(f"Error in leave handler: {e}")
        await safe_answer_callback(callback, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Å–µ—Å—Å–∏–∏", show_alert=True)
