"""
Keyboard components for Telegram bot
"""
from typing import List
from aiogram import types


def build_vote_keyboard(scale: List[str]) -> types.InlineKeyboardMarkup:
    """–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
    keyboard = []
    
    # Add voting buttons
    for i in range(0, len(scale), 3):
        row = [types.InlineKeyboardButton(text=v, callback_data=f"vote:{v}") for v in scale[i:i + 3]]
        keyboard.append(row)
    
    # Add finish button
    keyboard.append([types.InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_voting")])
    
    return types.InlineKeyboardMarkup(inline_keyboard=keyboard)


def build_admin_keyboard(scale: List[str]) -> types.InlineKeyboardMarkup:
    """–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –∞–¥–º–∏–Ω—Å–∫—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ç–∞–π–º–µ—Ä–æ–º"""
    rows = [
        [types.InlineKeyboardButton(text=v, callback_data=f"vote:{v}") for v in scale[i:i + 3]]
        for i in range(0, len(scale), 3)
    ]
    rows.append([
        types.InlineKeyboardButton(text="‚è∞ +30 —Å–µ–∫", callback_data="timer:+30"),
        types.InlineKeyboardButton(text="‚è∞ ‚àí30 —Å–µ–∫", callback_data="timer:-30"),
        types.InlineKeyboardButton(text="‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="finish_voting"),
    ])
    return types.InlineKeyboardMarkup(inline_keyboard=rows)


def get_main_menu(is_admin: bool = False) -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [
        [
            types.InlineKeyboardButton(text="üÜï –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", callback_data="menu:new_task"),
            types.InlineKeyboardButton(text="üìã –ò—Ç–æ–≥–∏ –¥–Ω—è", callback_data="menu:summary")
        ],
        [
            types.InlineKeyboardButton(text="üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", callback_data="menu:show_participants"),
            types.InlineKeyboardButton(text="üö™ –ü–æ–∫–∏–Ω—É—Ç—å", callback_data="menu:leave")
        ],
        [
            types.InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞", callback_data="menu:kick_participant")
        ]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    if is_admin:
        keyboard.append([
            types.InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å Story Points", callback_data="admin:update_story_points")
        ])
    
    return types.InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_settings_menu() -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton(text="‚è±Ô∏è –¢–∞–π–º–∞—É—Ç", callback_data="settings:timeout"),
            types.InlineKeyboardButton(text="üìä –®–∫–∞–ª–∞", callback_data="settings:scale")
        ],
        [
            types.InlineKeyboardButton(text="üëë –ê–¥–º–∏–Ω—ã", callback_data="settings:admins"),
            types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu:back")
        ]
    ])


def get_scale_menu() -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —à–∫–∞–ª—ã"""
    scales = [
        ['1', '2', '3', '5', '8', '13'],
        ['1', '2', '3', '5', '8', '13', '21'],
        ['0.5', '1', '2', '3', '5', '8', '13'],
        ['1', '2', '4', '8', '16', '32']
    ]
    
    buttons = []
    for i, scale in enumerate(scales):
        scale_text = ', '.join(scale)
        buttons.append([types.InlineKeyboardButton(
            text=f"üìä {scale_text}",
            callback_data=f"scale:{i}"
        )])
    
    buttons.append([types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu:back")])
    
    return types.InlineKeyboardMarkup(inline_keyboard=buttons)


def get_timeout_menu() -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∞–π–º–∞—É—Ç–∞"""
    timeouts = [30, 60, 90, 120, 180, 300]
    
    buttons = []
    for i in range(0, len(timeouts), 2):
        row = []
        for j in range(2):
            if i + j < len(timeouts):
                timeout = timeouts[i + j]
                row.append(types.InlineKeyboardButton(
                    text=f"‚è±Ô∏è {timeout} —Å–µ–∫",
                    callback_data=f"timeout:{timeout}"
                ))
        buttons.append(row)
    
    buttons.append([types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu:back")])
    
    return types.InlineKeyboardMarkup(inline_keyboard=buttons)


def get_stats_menu() -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üìä –¢–µ–∫—É—â–∞—è —Å–µ—Å—Å–∏—è", callback_data="stats:current"),
            types.InlineKeyboardButton(text="üìà –ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stats:today")
        ],
        [
            types.InlineKeyboardButton(text="üìã –ò—Å—Ç–æ—Ä–∏—è", callback_data="stats:history"),
            types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu:back")
        ]
    ])


def get_help_menu() -> types.InlineKeyboardMarkup:
    """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –ø–æ–º–æ—â–∏"""
    return types.InlineKeyboardMarkup(inline_keyboard=[
        [
            types.InlineKeyboardButton(text="üìñ –ö–æ–º–∞–Ω–¥—ã", callback_data="help:commands"),
            types.InlineKeyboardButton(text="üéØ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å", callback_data="help:how_to_play")
        ],
        [
            types.InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="help:settings"),
            types.InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="menu:back")
        ]
    ])
