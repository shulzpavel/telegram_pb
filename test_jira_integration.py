#!/usr/bin/env python3
"""
–¢–µ—Å—Ç—ã –¥–ª—è Jira –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
"""

import pytest
from unittest.mock import Mock, patch
from jira_service import JiraService

def test_jira_service_initialization():
    """–¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Jira —Å–µ—Ä–≤–∏—Å–∞"""
    service = JiraService()
    assert service.base_url == "https://media-life.atlassian.net"
    assert service.username == "pe_shults@betboom.org"
    assert service.story_points_field == "customfield_10022"

def test_parse_jira_request():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ Jira"""
    service = JiraService()
    
    # –¢–µ—Å—Ç —Å –≤–∞–ª–∏–¥–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    with patch.object(service, 'get_issue_summary') as mock_summary:
        mock_summary.return_value = "Test Task Summary"
        
        result = service.parse_jira_request("key=FLEX-365")
        assert result is not None
        assert result['key'] == "FLEX-365"
        assert result['summary'] == "Test Task Summary"
        assert "FLEX-365" in result['url']
    
    # –¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    result = service.parse_jira_request("invalid request")
    assert result is None
    
    # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    result = service.parse_jira_request("")
    assert result is None

def test_get_issue_url():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –∑–∞–¥–∞—á–∏"""
    service = JiraService()
    url = service.get_issue_url("FLEX-365")
    assert url == "https://media-life.atlassian.net/browse/FLEX-365"

@patch('requests.put')
def test_update_story_points(mock_put):
    """–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Story Points"""
    service = JiraService()
    
    # –ú–æ–∫–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    mock_response = Mock()
    mock_response.raise_for_status.return_value = None
    mock_response.json.return_value = {"success": True}
    mock_put.return_value = mock_response
    
    result = service.update_story_points("FLEX-365", 5)
    assert result is True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    mock_put.assert_called_once()
    call_args = mock_put.call_args
    assert "FLEX-365" in call_args[0][0]  # URL —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–ª—é—á –∑–∞–¥–∞—á–∏
    assert call_args[1]['json']['fields']['customfield_10022'] == 5

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Jira –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    
    try:
        test_jira_service_initialization()
        print("‚úÖ –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—à–µ–ª")
        
        test_parse_jira_request()
        print("‚úÖ –¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ—à–µ–ª")
        
        test_get_issue_url()
        print("‚úÖ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL –ø—Ä–æ—à–µ–ª")
        
        test_update_story_points()
        print("‚úÖ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SP –ø—Ä–æ—à–µ–ª")
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã Jira –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        raise